{
  "swagger": "2.0",
  "info": {
    "title": "basket.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "BasketService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/basket": {
      "get": {
        "operationId": "BasketService_GetBasket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/BasketResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "Name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Surname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Patronymic",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Birthday",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TYPE_ADMIN",
              "TYPE_CUSTOMER",
              "TYPE_SELLER"
            ],
            "default": "TYPE_ADMIN"
          }
        ],
        "tags": [
          "BasketService"
        ]
      },
      "delete": {
        "operationId": "BasketService_ClearBasket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "Name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Surname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Patronymic",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Birthday",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TYPE_ADMIN",
              "TYPE_CUSTOMER",
              "TYPE_SELLER"
            ],
            "default": "TYPE_ADMIN"
          }
        ],
        "tags": [
          "BasketService"
        ]
      }
    },
    "/basket/add": {
      "post": {
        "operationId": "BasketService_AddProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BasketProductRequest"
            }
          }
        ],
        "tags": [
          "BasketService"
        ]
      }
    },
    "/basket/delete": {
      "post": {
        "operationId": "BasketService_DeleteProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BasketProductRequest"
            }
          }
        ],
        "tags": [
          "BasketService"
        ]
      }
    }
  },
  "definitions": {
    "Basket": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "format": "int64"
        },
        "User": {
          "$ref": "#/definitions/User"
        },
        "Products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        },
        "Counter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Count"
          }
        },
        "TotalPrice": {
          "type": "number",
          "format": "float"
        },
        "CreatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "UpdatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BasketProductRequest": {
      "type": "object",
      "properties": {
        "Product": {
          "$ref": "#/definitions/Product"
        },
        "User": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "BasketResponse": {
      "type": "object",
      "properties": {
        "Basket": {
          "$ref": "#/definitions/Basket"
        }
      }
    },
    "Count": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "format": "int64"
        },
        "Count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "format": "int64"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Price": {
          "type": "number",
          "format": "float"
        },
        "Image": {
          "type": "string"
        },
        "Category": {
          "type": "string"
        },
        "Subcategory": {
          "type": "string"
        },
        "Brand": {
          "type": "string"
        },
        "Model": {
          "type": "string"
        },
        "Color": {
          "type": "string"
        },
        "Size": {
          "type": "string"
        },
        "Material": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "UpdatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "format": "int64"
        },
        "Name": {
          "type": "string"
        },
        "Surname": {
          "type": "string"
        },
        "Patronymic": {
          "type": "string"
        },
        "Birthday": {
          "type": "string",
          "format": "date-time"
        },
        "Type": {
          "$ref": "#/definitions/UserType"
        }
      }
    },
    "UserType": {
      "type": "string",
      "enum": [
        "TYPE_ADMIN",
        "TYPE_CUSTOMER",
        "TYPE_SELLER"
      ],
      "default": "TYPE_ADMIN"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
